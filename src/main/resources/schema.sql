DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS BOOK;
DROP TABLE IF EXISTS AUTHOR;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS AUTHORITIES;

CREATE TABLE AUTHOR(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(255)
);

CREATE TABLE GENRE(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(255)
);

CREATE TABLE BOOK(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(255),
  AUTHOR_ID BIGINT,
  GENRE_ID BIGINT,
  CONSTRAINT refBookToAuth FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(ID),
  CONSTRAINT refBookToGenre FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID)
);

CREATE TABLE COMMENT(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  COMMENT VARCHAR(255),
  BOOK_ID BIGINT,
  CONSTRAINT refCommentToBook FOREIGN KEY (BOOK_ID) references BOOK(id));

CREATE TABLE USERS(
  USERNAME VARCHAR(50) NOT NULL,
  PASSWORD VARCHAR(100) NOT NULL,
  ENABLED SMALLINT NOT NULL DEFAULT 1,
  PRIMARY KEY (username)
);

CREATE TABLE AUTHORITIES(
  username VARCHAR(50) NOT NULL,
  authority VARCHAR(50) NOT NULL,
  FOREIGN KEY (username) REFERENCES users(username)
);

CREATE UNIQUE INDEX ix_auth_username on authorities (username, authority);